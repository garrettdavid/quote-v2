{"version":3,"sources":["index.js"],"names":["Quote","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","id","text","author","App","_this","Object","C_Users_Garrett_Dropbox_Projects_quote_v2_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Garrett_Dropbox_Projects_quote_v2_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Garrett_Dropbox_Projects_quote_v2_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","handleQuoteClick","bind","C_Users_Garrett_Dropbox_Projects_quote_v2_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_this2","fetch","then","response","json","data","setState","quoteText","quoteAuthor","href","makeLink","class","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0LAKA,SAASA,EAAMC,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cACJH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,QAAQJ,EAAMK,MACpBJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UAAUJ,EAAMM,aAK5BC,cACF,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMX,KACDe,MAAQ,CACTV,KAAM,KACNC,OAAQ,MAGZE,EAAKQ,iBAAmBR,EAAKQ,iBAAiBC,KAAtBR,OAAAS,EAAA,EAAAT,CAAAD,IAPTA,kFAWA,IAAAW,EAAAR,KACfS,MAAM,kCACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJL,EAAKM,SAAS,CACVpB,KAAM,IAAOmB,EAAKE,UAAY,IAC9BpB,OAAQ,IAAMkB,EAAKG,4DAMzBhB,KAAKK,oDAGAX,EAAMC,GACX,MAAO,iCAAmCD,EAAO,KAAOC,mCAIxD,OACIL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAACJ,EAAD,CAAOM,KAAMM,KAAKI,MAAMV,KAAMC,OAAQK,KAAKI,MAAMT,SACjDL,EAAAC,EAAAC,cAAA,KAAGyB,KAAMjB,KAAKkB,SAASlB,KAAKI,MAAMV,KAAMM,KAAKI,MAAMT,QAASF,GAAG,cAAc0B,MAAM,UAAnF,eACA7B,EAAAC,EAAAC,cAAA,KAAGyB,KAAK,aAAaxB,GAAG,YAAY2B,QAASpB,KAAKK,iBAAkBc,MAAM,UAA1E,qBApCEE,IAAMC,WA0CxBC,IAASC,OAAOlC,EAAAC,EAAAC,cAACI,EAAD,MAAS6B,SAASC,eAAe","file":"static/js/main.7d672f3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css';\r\nimport './main.css';\r\n\r\nfunction Quote(props) {\r\n    return (\r\n        <div id=\"full-quote\">\r\n            <p id=\"text\">{props.text}</p>\r\n            <p id=\"author\">{props.author}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: null,\r\n            author: null\r\n        };\r\n\r\n        this.handleQuoteClick = this.handleQuoteClick.bind(this);\r\n    }\r\n\r\n    // Quote API thanks to https://github.com/lukePeavey/quota\r\n    handleQuoteClick() {\r\n        fetch('https://quota.glitch.me/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.setState({\r\n              text: \"\\\"\" + data.quoteText + \"\\\"\",\r\n              author: '-' + data.quoteAuthor\r\n          });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleQuoteClick();\r\n    }\r\n\r\n    makeLink(text, author) {\r\n        return \"twitter.com/intent/tweet?text=\" + text + \" -\" + author;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"quote-box\">\r\n                <Quote text={this.state.text} author={this.state.author} />\r\n                <a href={this.makeLink(this.state.text, this.state.author)} id=\"tweet-quote\" class=\"button\">Tweet Quote</a>\r\n                <a href=\"#quote-box\" id=\"new-quote\" onClick={this.handleQuoteClick} class=\"button\">New Quote</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}